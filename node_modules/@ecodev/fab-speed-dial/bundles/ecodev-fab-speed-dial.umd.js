(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/material/button'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@ecodev/fab-speed-dial', ['exports', '@angular/core', '@angular/common', '@angular/material/button', 'rxjs', 'rxjs/operators'], factory) :
    (global = global || self, factory((global.ecodev = global.ecodev || {}, global.ecodev['fab-speed-dial'] = {}), global.ng.core, global.ng.common, global.ng.material.button, global.rxjs, global.rxjs.operators));
}(this, function (exports, core, common, button, rxjs, operators) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var Z_INDEX_ITEM = 23;
    var EcoFabSpeedDialActionsComponent = /** @class */ (function () {
        function EcoFabSpeedDialActionsComponent(injector, renderer) {
            this.renderer = renderer;
            /**
             * Whether the min-fab button exist in DOM
             */
            this.miniFabVisible = false;
            this._parent = injector.get(EcoFabSpeedDialComponent);
        }
        /**
         * @return {?}
         */
        EcoFabSpeedDialActionsComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this._buttons.changes.subscribe((/**
             * @return {?}
             */
            function () {
                _this.initButtonStates();
                _this._parent.setActionsVisibility();
            }));
            this.initButtonStates();
        };
        /**
         * @private
         * @return {?}
         */
        EcoFabSpeedDialActionsComponent.prototype.initButtonStates = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            this._buttons.forEach((/**
             * @param {?} button
             * @param {?} i
             * @return {?}
             */
            function (button, i) {
                _this.renderer.addClass(button._getHostElement(), 'eco-fab-action-item');
                _this.changeElementStyle(button._getHostElement(), 'z-index', '' + (Z_INDEX_ITEM - i));
            }));
        };
        /**
         * @return {?}
         */
        EcoFabSpeedDialActionsComponent.prototype.show = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this._buttons) {
                return;
            }
            this.resetAnimationState();
            this.miniFabVisible = true;
            this.showMiniFabAnimation = setTimeout((/**
             * @return {?}
             */
            function () {
                _this._buttons.forEach((/**
                 * @param {?} button
                 * @param {?} i
                 * @return {?}
                 */
                function (button, i) {
                    /** @type {?} */
                    var transitionDelay = 0;
                    /** @type {?} */
                    var transform;
                    if (_this._parent.animationMode === 'scale') {
                        // Incremental transition delay of 65ms for each action button
                        transitionDelay = 3 + (65 * i);
                        transform = 'scale(1)';
                    }
                    else {
                        transform = _this.getTranslateFunction('0');
                    }
                    /** @type {?} */
                    var hostElement = button._getHostElement();
                    _this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');
                    _this.changeElementStyle(hostElement, 'opacity', '1');
                    _this.changeElementStyle(hostElement, 'transform', transform);
                }));
            }), 50); // Be sure that *ngIf can show elements before trying to animate them
        };
        /**
         * @private
         * @return {?}
         */
        EcoFabSpeedDialActionsComponent.prototype.resetAnimationState = /**
         * @private
         * @return {?}
         */
        function () {
            clearTimeout(this.showMiniFabAnimation);
            if (this.hideMiniFab) {
                this.hideMiniFab.unsubscribe();
                this.hideMiniFab = null;
            }
        };
        /**
         * @return {?}
         */
        EcoFabSpeedDialActionsComponent.prototype.hide = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this._buttons) {
                return;
            }
            this.resetAnimationState();
            /** @type {?} */
            var obs = this._buttons.map((/**
             * @param {?} button
             * @param {?} i
             * @return {?}
             */
            function (button, i) {
                /** @type {?} */
                var opacity = '1';
                /** @type {?} */
                var transitionDelay = 0;
                /** @type {?} */
                var transform;
                if (_this._parent.animationMode === 'scale') {
                    transitionDelay = 3 - (65 * i);
                    transform = 'scale(0)';
                    opacity = '0';
                }
                else {
                    transform = _this.getTranslateFunction((55 * (i + 1) - (i * 5)) + 'px');
                }
                /** @type {?} */
                var hostElement = button._getHostElement();
                _this.changeElementStyle(hostElement, 'transition-delay', transitionDelay + 'ms');
                _this.changeElementStyle(hostElement, 'opacity', opacity);
                _this.changeElementStyle(hostElement, 'transform', transform);
                return rxjs.fromEvent(hostElement, 'transitionend').pipe(operators.take(1));
            }));
            // Wait for all animation to finish, then destroy their elements
            this.hideMiniFab = rxjs.forkJoin(obs).subscribe((/**
             * @return {?}
             */
            function () { return _this.miniFabVisible = false; }));
        };
        /**
         * @private
         * @param {?} value
         * @return {?}
         */
        EcoFabSpeedDialActionsComponent.prototype.getTranslateFunction = /**
         * @private
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var dir = this._parent.direction;
            /** @type {?} */
            var translateFn = (dir === 'up' || dir === 'down') ? 'translateY' : 'translateX';
            /** @type {?} */
            var sign = (dir === 'down' || dir === 'right') ? '-' : '';
            return translateFn + '(' + sign + value + ')';
        };
        /**
         * @private
         * @param {?} elem
         * @param {?} style
         * @param {?} value
         * @return {?}
         */
        EcoFabSpeedDialActionsComponent.prototype.changeElementStyle = /**
         * @private
         * @param {?} elem
         * @param {?} style
         * @param {?} value
         * @return {?}
         */
        function (elem, style, value) {
            // FIXME - Find a way to create a "wrapper" around the action button(s) provided by the user, so we don't change it's style tag
            this.renderer.setStyle(elem, style, value);
        };
        EcoFabSpeedDialActionsComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'eco-fab-speed-dial-actions',
                        template: "\n        <ng-content select=\"[mat-mini-fab]\" *ngIf=\"miniFabVisible\"></ng-content>"
                    }] }
        ];
        /** @nocollapse */
        EcoFabSpeedDialActionsComponent.ctorParameters = function () { return [
            { type: core.Injector },
            { type: core.Renderer2 }
        ]; };
        EcoFabSpeedDialActionsComponent.propDecorators = {
            _buttons: [{ type: core.ContentChildren, args: [button.MatButton,] }]
        };
        return EcoFabSpeedDialActionsComponent;
    }());
    /**
     * \@dynamic \@see https://github.com/angular/angular/issues/20351#issuecomment-344009887
     */
    var EcoFabSpeedDialComponent = /** @class */ (function () {
        function EcoFabSpeedDialComponent(elementRef, renderer, document) {
            this.elementRef = elementRef;
            this.renderer = renderer;
            this.document = document;
            this.isInitialized = false;
            this._direction = 'up';
            this._open = false;
            this._animationMode = 'fling';
            this._fixed = false;
            this._documentClickUnlistener = null;
            this.openChange = new core.EventEmitter();
        }
        Object.defineProperty(EcoFabSpeedDialComponent.prototype, "fixed", {
            /**
             * Whether this speed dial is fixed on screen (user cannot change it by clicking)
             */
            get: /**
             * Whether this speed dial is fixed on screen (user cannot change it by clicking)
             * @return {?}
             */
            function () {
                return this._fixed;
            },
            set: /**
             * @param {?} fixed
             * @return {?}
             */
            function (fixed) {
                this._fixed = fixed;
                this._processOutsideClickState();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EcoFabSpeedDialComponent.prototype, "open", {
            /**
             * Whether this speed dial is opened
             */
            get: /**
             * Whether this speed dial is opened
             * @return {?}
             */
            function () {
                return this._open;
            },
            set: /**
             * @param {?} open
             * @return {?}
             */
            function (open) {
                /** @type {?} */
                var previousOpen = this._open;
                this._open = open;
                if (previousOpen !== this._open) {
                    this.openChange.emit(this._open);
                    if (this.isInitialized) {
                        this.setActionsVisibility();
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EcoFabSpeedDialComponent.prototype, "direction", {
            /**
             * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'
             */
            get: /**
             * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'
             * @return {?}
             */
            function () {
                return this._direction;
            },
            set: /**
             * @param {?} direction
             * @return {?}
             */
            function (direction) {
                /** @type {?} */
                var previousDirection = this._direction;
                this._direction = direction;
                if (previousDirection !== this.direction) {
                    this._setElementClass(previousDirection, false);
                    this._setElementClass(this.direction, true);
                    if (this.isInitialized) {
                        this.setActionsVisibility();
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EcoFabSpeedDialComponent.prototype, "animationMode", {
            /**
             * The animation mode to open the speed dial. Can be 'fling' or 'scale'
             */
            get: /**
             * The animation mode to open the speed dial. Can be 'fling' or 'scale'
             * @return {?}
             */
            function () {
                return this._animationMode;
            },
            set: /**
             * @param {?} animationMode
             * @return {?}
             */
            function (animationMode) {
                var _this = this;
                /** @type {?} */
                var previousAnimationMode = this._animationMode;
                this._animationMode = animationMode;
                if (previousAnimationMode !== this._animationMode) {
                    this._setElementClass(previousAnimationMode, false);
                    this._setElementClass(this.animationMode, true);
                    if (this.isInitialized) {
                        // To start another detect lifecycle and force the "close" on the action buttons
                        Promise.resolve(null).then((/**
                         * @return {?}
                         */
                        function () { return _this.open = false; }));
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            this.isInitialized = true;
            this.setActionsVisibility();
            this._setElementClass(this.direction, true);
            this._setElementClass(this.animationMode, true);
        };
        /**
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this._unsetDocumentClickListener();
        };
        /**
         * Toggle the open state of this speed dial
         */
        /**
         * Toggle the open state of this speed dial
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype.toggle = /**
         * Toggle the open state of this speed dial
         * @return {?}
         */
        function () {
            this.open = !this.open;
        };
        /**
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype._onClick = /**
         * @return {?}
         */
        function () {
            if (!this.fixed && this.open) {
                this.open = false;
            }
        };
        /**
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype.setActionsVisibility = /**
         * @return {?}
         */
        function () {
            if (!this._childActions) {
                return;
            }
            if (this.open) {
                this._childActions.show();
            }
            else {
                this._childActions.hide();
            }
            this._processOutsideClickState();
        };
        /**
         * @private
         * @param {?} elemClass
         * @param {?} isAdd
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype._setElementClass = /**
         * @private
         * @param {?} elemClass
         * @param {?} isAdd
         * @return {?}
         */
        function (elemClass, isAdd) {
            /** @type {?} */
            var finalClass = "eco-" + elemClass;
            if (isAdd) {
                this.renderer.addClass(this.elementRef.nativeElement, finalClass);
            }
            else {
                this.renderer.removeClass(this.elementRef.nativeElement, finalClass);
            }
        };
        /**
         * @private
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype._processOutsideClickState = /**
         * @private
         * @return {?}
         */
        function () {
            if (!this.fixed && this.open) {
                this._setDocumentClickListener();
            }
            else {
                this._unsetDocumentClickListener();
            }
        };
        /**
         * @private
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype._setDocumentClickListener = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this._documentClickUnlistener) {
                this._documentClickUnlistener = this.renderer.listen(this.document, 'click', (/**
                 * @return {?}
                 */
                function () {
                    _this.open = false;
                }));
            }
        };
        /**
         * @private
         * @return {?}
         */
        EcoFabSpeedDialComponent.prototype._unsetDocumentClickListener = /**
         * @private
         * @return {?}
         */
        function () {
            if (this._documentClickUnlistener) {
                this._documentClickUnlistener();
                this._documentClickUnlistener = null;
            }
        };
        EcoFabSpeedDialComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'eco-fab-speed-dial',
                        template: "\n        <div class=\"eco-fab-speed-dial-container\">\n            <ng-content select=\"eco-fab-speed-dial-trigger\"></ng-content>\n            <ng-content select=\"eco-fab-speed-dial-actions\"></ng-content>\n        </div>\n    ",
                        encapsulation: core.ViewEncapsulation.None,
                        styles: ["eco-fab-speed-dial{display:inline-block}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180{transform:rotate(180deg)}eco-fab-speed-dial.eco-opened .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transform:rotate(360deg)}eco-fab-speed-dial .eco-fab-speed-dial-container{position:relative;display:flex;align-items:center;z-index:20}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{pointer-events:auto;z-index:24}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin180,eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-trigger.eco-spin .spin360{transition:.6s cubic-bezier(.4,0,.2,1)}eco-fab-speed-dial .eco-fab-speed-dial-container eco-fab-speed-dial-actions{display:flex;position:absolute;height:0;width:0}eco-fab-speed-dial.eco-fling .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{display:block;opacity:1;transition:.3s cubic-bezier(.55,0,.55,.2)}eco-fab-speed-dial.eco-scale .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{transform:scale(0);transition:.3s cubic-bezier(.55,0,.55,.2);transition-duration:.14286s}eco-fab-speed-dial.eco-down eco-fab-speed-dial-actions{bottom:2px;left:7px}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column;order:2}eco-fab-speed-dial.eco-down .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-top:10px}eco-fab-speed-dial.eco-up eco-fab-speed-dial-actions{top:2px;left:7px}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container{flex-direction:column}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:column-reverse;order:1}eco-fab-speed-dial.eco-up .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-bottom:10px}eco-fab-speed-dial.eco-left eco-fab-speed-dial-actions{top:7px;left:2px}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:2}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row-reverse;order:1}eco-fab-speed-dial.eco-left .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-right:10px}eco-fab-speed-dial.eco-right eco-fab-speed-dial-actions{top:7px;right:2px}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container{flex-direction:row}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-trigger{order:1}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions{flex-direction:row;order:2}eco-fab-speed-dial.eco-right .eco-fab-speed-dial-container eco-fab-speed-dial-actions .eco-fab-action-item{margin-left:10px}"]
                    }] }
        ];
        /** @nocollapse */
        EcoFabSpeedDialComponent.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: core.Renderer2 },
            { type: Document, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }
        ]; };
        EcoFabSpeedDialComponent.propDecorators = {
            fixed: [{ type: core.Input }],
            open: [{ type: core.HostBinding, args: ['class.eco-opened',] }, { type: core.Input }],
            direction: [{ type: core.Input }],
            animationMode: [{ type: core.Input }],
            openChange: [{ type: core.Output }],
            _childActions: [{ type: core.ContentChild, args: [EcoFabSpeedDialActionsComponent, { static: false },] }],
            _onClick: [{ type: core.HostListener, args: ['click',] }]
        };
        return EcoFabSpeedDialComponent;
    }());
    var EcoFabSpeedDialTriggerComponent = /** @class */ (function () {
        function EcoFabSpeedDialTriggerComponent(injector) {
            this.spin = false;
            this._parent = injector.get(EcoFabSpeedDialComponent);
        }
        Object.defineProperty(EcoFabSpeedDialTriggerComponent.prototype, "sp", {
            /**
             * Whether this trigger should spin (360dg) while opening the speed dial
             */
            get: /**
             * Whether this trigger should spin (360dg) while opening the speed dial
             * @return {?}
             */
            function () {
                return this.spin;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?} event
         * @return {?}
         */
        EcoFabSpeedDialTriggerComponent.prototype._onClick = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (!this._parent.fixed) {
                this._parent.toggle();
                event.stopPropagation();
            }
        };
        EcoFabSpeedDialTriggerComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'eco-fab-speed-dial-trigger',
                        template: "\n        <ng-content select=\"[mat-fab]\"></ng-content>"
                    }] }
        ];
        /** @nocollapse */
        EcoFabSpeedDialTriggerComponent.ctorParameters = function () { return [
            { type: core.Injector }
        ]; };
        EcoFabSpeedDialTriggerComponent.propDecorators = {
            sp: [{ type: core.HostBinding, args: ['class.eco-spin',] }],
            spin: [{ type: core.Input }],
            _onClick: [{ type: core.HostListener, args: ['click', ['$event'],] }]
        };
        return EcoFabSpeedDialTriggerComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var EcoFabSpeedDialModule = /** @class */ (function () {
        function EcoFabSpeedDialModule() {
        }
        EcoFabSpeedDialModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [common.CommonModule],
                        declarations: [
                            EcoFabSpeedDialActionsComponent,
                            EcoFabSpeedDialComponent,
                            EcoFabSpeedDialTriggerComponent,
                        ],
                        exports: [
                            EcoFabSpeedDialActionsComponent,
                            EcoFabSpeedDialComponent,
                            EcoFabSpeedDialTriggerComponent,
                        ],
                    },] }
        ];
        return EcoFabSpeedDialModule;
    }());

    exports.EcoFabSpeedDialModule = EcoFabSpeedDialModule;
    exports.ɵa = EcoFabSpeedDialActionsComponent;
    exports.ɵb = EcoFabSpeedDialComponent;
    exports.ɵc = EcoFabSpeedDialTriggerComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=ecodev-fab-speed-dial.umd.js.map
