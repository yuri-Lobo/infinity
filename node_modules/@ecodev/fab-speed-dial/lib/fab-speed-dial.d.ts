import { AfterContentInit, ElementRef, EventEmitter, Injector, OnDestroy, QueryList, Renderer2 } from '@angular/core';
import { MatButton } from '@angular/material/button';
export declare type Direction = 'up' | 'down' | 'left' | 'right';
export declare type AnimationMode = 'fling' | 'scale';
export declare class EcoFabSpeedDialActionsComponent implements AfterContentInit {
    private renderer;
    private _parent;
    _buttons: QueryList<MatButton>;
    /**
     * Whether the min-fab button exist in DOM
     */
    miniFabVisible: boolean;
    /**
     * The timeout ID for the callback to show the mini-fab buttons
     */
    private showMiniFabAnimation;
    /**
     * When we will remove mini-fab buttons from DOM, after the animation is complete
     */
    private hideMiniFab;
    constructor(injector: Injector, renderer: Renderer2);
    ngAfterContentInit(): void;
    private initButtonStates;
    show(): void;
    private resetAnimationState;
    hide(): void;
    private getTranslateFunction;
    private changeElementStyle;
}
/** @dynamic @see https://github.com/angular/angular/issues/20351#issuecomment-344009887 */
export declare class EcoFabSpeedDialComponent implements OnDestroy, AfterContentInit {
    private elementRef;
    private renderer;
    private document;
    private isInitialized;
    private _direction;
    private _open;
    private _animationMode;
    private _fixed;
    private _documentClickUnlistener;
    /**
     * Whether this speed dial is fixed on screen (user cannot change it by clicking)
     */
    fixed: boolean;
    /**
     * Whether this speed dial is opened
     */
    open: boolean;
    /**
     * The direction of the speed dial. Can be 'up', 'down', 'left' or 'right'
     */
    direction: Direction;
    /**
     * The animation mode to open the speed dial. Can be 'fling' or 'scale'
     */
    animationMode: AnimationMode;
    openChange: EventEmitter<boolean>;
    _childActions: EcoFabSpeedDialActionsComponent;
    constructor(elementRef: ElementRef, renderer: Renderer2, document: Document);
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    /**
     * Toggle the open state of this speed dial
     */
    toggle(): void;
    _onClick(): void;
    setActionsVisibility(): void;
    private _setElementClass;
    private _processOutsideClickState;
    private _setDocumentClickListener;
    private _unsetDocumentClickListener;
}
export declare class EcoFabSpeedDialTriggerComponent {
    private _parent;
    /**
     * Whether this trigger should spin (360dg) while opening the speed dial
     */
    readonly sp: boolean;
    spin: boolean;
    constructor(injector: Injector);
    _onClick(event: Event): void;
}
