!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-progress-bar",["exports","@angular/core","@angular/common"],e):e(r["angular-progress-bar"]={},r.ng.core,r.ng.common)}(this,function(r,e,n){"use strict";var o=function(){function r(){this.color="#488aff",this.disabledP=!1}return r.prototype.whichColor=function(r){var e,n,o=Object.keys(this.degraded);o.forEach(function(r,e){return o[e]=+r});var t=+r,s=(o=o.sort(function(r,e){return r-e}))[0];try{for(var a=function c(r){var e="function"==typeof Symbol&&r[Symbol.iterator],n=0;return e?e.call(r):{next:function(){return r&&n>=r.length&&(r=void 0),{value:r&&r[n++],done:!r}}}}(o),i=a.next();!i.done;i=a.next()){var d=i.value;if(d<t)s=d;else if(t-1<=d)return this.degraded[s]}}catch(u){e={error:u}}finally{try{i&&!i.done&&(n=a["return"])&&n.call(a)}finally{if(e)throw e.error}}return this.degraded[s]},r.prototype.whichProgress=function(r){try{return Math.round(100*+r)/100}catch(e){return r}},r.decorators=[{type:e.Component,args:[{selector:"progress-bar",template:'\n  <div class="progress-outer">\n    <div class="progress-inner" [style.width]="whichProgress(progress) + \'%\'" [style.background-color]="degraded == null ? color : whichColor(progress)">\n      <ng-container *ngIf="!disabledP"> \n        {{whichProgress(progress)}}%\n      </ng-container>\n      <ng-container *ngIf="disabledP"> \n        {{whichProgress(progress)}}\n      </ng-container>\n    </div>\n  </div>\n  ',styles:["\n        .progress-outer {\n          width: 96%;\n          margin: 10px 2%;\n          padding: 3px;\n          background-color: #f4f4f4;\n          border: 1px solid #dcdcdc;\n          color: #fff;\n          border-radius: 20px;\n          text-align: center;\n        }\n        .progress-inner {\n          min-width: 15%;\n          min-height:18px;\n          white-space: nowrap;\n          overflow: hidden;\n          padding: 0px;\n          border-radius: 20px;\n  "]}]}],r.ctorParameters=function(){return[]},r.propDecorators={progress:[{type:e.Input,args:["progress"]}],color:[{type:e.Input,args:["color"]}],degraded:[{type:e.Input,args:["color-degraded"]}],disabledP:[{type:e.Input,args:["disable-percentage"]}]},r}(),t=function(){function r(){}return r.decorators=[{type:e.NgModule,args:[{imports:[n.CommonModule],declarations:[o],exports:[o],schemas:[e.CUSTOM_ELEMENTS_SCHEMA]}]}],r}();r.ProgressBarComponent=o,r.ProgressBarModule=t,Object.defineProperty(r,"__esModule",{value:!0})});
//# sourceMappingURL=angular-progress-bar.umd.min.js.map