{"version":3,"file":"ng2-adsk-forge-viewer.js","sources":["../../../projects/ng2-adsk-forge-viewer/src/lib/service/script.service.ts","../../../projects/ng2-adsk-forge-viewer/src/lib/extensions/extension.ts","../../../projects/ng2-adsk-forge-viewer/src/lib/extensions/basic-extension.ts","../../../projects/ng2-adsk-forge-viewer/src/lib/component/viewer.component.ts","../../../projects/ng2-adsk-forge-viewer/src/lib/component/thumbnail.component.ts","../../../projects/ng2-adsk-forge-viewer/src/lib/ng2-adsk-forge-viewer.module.ts","../../../projects/ng2-adsk-forge-viewer/src/public-api.ts","../../../projects/ng2-adsk-forge-viewer/src/ng2-adsk-forge-viewer.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\ndeclare var document: any;\n\nexport interface ScriptInfoLookup {\n  [key: string]: ScriptInfo;\n}\n\nexport interface ScriptInfo {\n  src: string;\n  loaded: boolean;\n  status?: string;\n}\n\n@Injectable()\nexport class ScriptService {\n\n  private scripts: ScriptInfoLookup = {};\n\n  constructor() {\n    // Nothing to do\n  }\n\n  public load(...urls: string[]): Promise<ScriptInfo[]> {\n    const promises: Promise<ScriptInfo>[] = [];\n\n    urls.forEach((src) => {\n      if (this.scripts[src] && this.scripts[src].loaded) {\n        return;\n      }\n\n      this.scripts[src] = { src, loaded: false };\n      return promises.push(this.loadScript(src));\n    });\n\n    return Promise.all(promises);\n  }\n\n  public loadScript(name: string): Promise<ScriptInfo> {\n    return new Promise((resolve, reject) => {\n      // resolve if already loaded\n      if (this.scripts[name] && this.scripts[name].loaded) {\n        resolve({ src: name, loaded: true, status: 'Already Loaded' });\n        return;\n      }\n\n      // load script\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = this.scripts[name].src;\n\n      if (script.readyState) {  // IE\n        script.onreadystatechange = () => {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            this.scripts[name].loaded = true;\n\n            resolve({ src: name, loaded: true, status: 'Loaded' });\n          }\n        };\n      } else {  // Others\n        script.onload = () => {\n          this.scripts[name].loaded = true;\n\n          resolve({ src: name, loaded: true, status: 'Loaded' });\n        };\n      }\n\n      script.onerror = (error: any) => resolve({ src: name, loaded: false, status: 'Loaded' });\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n}\n","/// <reference types=\"forge-viewer\" />\nexport abstract class ViewerEventArgs {\n  target?: Autodesk.Viewing.Viewer3D;\n  model?: Autodesk.Viewing.ViewerItem;\n  type: string;\n  [key: string]: any;\n}\nexport class AggregationSelectionChangedEventArgs extends ViewerEventArgs {\n  selections: Autodesk.Viewing.ViewerItem[];\n  type = Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT;\n}\nexport class AnimationReadyEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.ANIMATION_READY_EVENT;\n}\nexport class CameraChangedEventArgs extends ViewerEventArgs {\n  camera: THREE.Camera;\n  type = Autodesk.Viewing.CAMERA_CHANGE_EVENT;\n}\nexport class CutplanesChangedEventArgs extends ViewerEventArgs {\n  cutplanes: Object[];\n  type = Autodesk.Viewing.CUTPLANES_CHANGE_EVENT;\n}\nexport class EscapeEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.ESCAPE_EVENT;\n}\nexport class ExplodeChangedEventArgs extends ViewerEventArgs {\n  scale: number;\n  type = Autodesk.Viewing.EXPLODE_CHANGE_EVENT;\n}\nexport abstract class ExtensionLoadedUnloadedEventArgs extends ViewerEventArgs {\n  extensionId: string;\n}\nexport class ExtensionLoadedEventArgs extends ExtensionLoadedUnloadedEventArgs {\n  type = Autodesk.Viewing.EXTENSION_LOADED_EVENT;\n}\nexport class ExtensionUnloadedEventArgs extends ExtensionLoadedUnloadedEventArgs {\n  type = Autodesk.Viewing.EXTENSION_UNLOADED_EVENT;\n}\nexport class FinalFrameRenderedChangedEventArgs extends ViewerEventArgs {\n  planes: Object[];\n  type = Autodesk.Viewing.FINAL_FRAME_RENDERED_CHANGED_EVENT;\n}\nexport class FitToViewEventArgs extends ViewerEventArgs {\n  immediate: boolean;\n  nodeIdArray: number[];\n  type = Autodesk.Viewing.FIT_TO_VIEW_EVENT;\n}\nexport class FragmentsLoadedEventArgs extends ViewerEventArgs {\n  getFragIds: () => void;\n  data: Object;\n  type = Autodesk.Viewing.FRAGMENTS_LOADED_EVENT;\n}\nexport class FullscreenEventArgs extends ViewerEventArgs {\n  mode: Autodesk.Viewing.ScreenMode;\n  type = Autodesk.Viewing.FULLSCREEN_MODE_EVENT;\n}\nexport class GeometryLoadedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.GEOMETRY_LOADED_EVENT;\n}\nexport class HideEventArgs extends ViewerEventArgs {\n  nodeIdArray: number[];\n  type = Autodesk.Viewing.HIDE_EVENT;\n}\nexport class HyperlinkEventArgs extends ViewerEventArgs {\n  data: Object; // TODO: Can his be stronger?\n  type = Autodesk.Viewing.HYPERLINK_EVENT;\n}\nexport class IsolateEventArgs extends ViewerEventArgs {\n  nodeIdArray: number[];\n  type = Autodesk.Viewing.ISOLATE_EVENT;\n}\nexport class LayerVisibilityEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.LAYER_VISIBILITY_CHANGED_EVENT;\n}\nexport class LoadMissingGeometryEventArgs extends ViewerEventArgs {\n  delay: boolean;\n  type = Autodesk.Viewing.LOAD_MISSING_GEOMETRY;\n}\nexport class ModelRootLoadedEventArgs extends ViewerEventArgs {\n  svf: Object; // TODO: can this be stronger\n  type = Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT;\n}\nexport class ModelUnloadedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.MODEL_UNLOADED_EVENT;\n}\nexport class NavigationModeChangedEventArgs extends ViewerEventArgs {\n  id: string;\n  type = Autodesk.Viewing.NAVIGATION_MODE_CHANGED_EVENT;\n}\nexport abstract class ObjectTreeEventArgs extends ViewerEventArgs {\n  svf: Object; // TODO: can this be stronger\n}\nexport class ObjectTreeCreatedEventArgs extends ObjectTreeEventArgs {\n  type = Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT;\n}\nexport class ObjectTreeUnavailableEventArgs extends ObjectTreeEventArgs {\n  type = Autodesk.Viewing.OBJECT_TREE_UNAVAILABLE_EVENT;\n}\nexport abstract class PrefEventArgs extends ViewerEventArgs {\n  name: string;\n  value: Object;\n}\nexport class PrefChangedEventArgs extends PrefEventArgs {\n  type = Autodesk.Viewing.PREF_CHANGED_EVENT;\n}\nexport class PrefResetEventArgs extends PrefEventArgs {\n  type = Autodesk.Viewing.PREF_RESET_EVENT;\n}\nexport class ProgressUpdateEventArgs extends ViewerEventArgs {\n  percent: number;\n  state: Autodesk.Viewing.ProgressState;\n  type = Autodesk.Viewing.PROGRESS_UPDATE_EVENT;\n}\nexport class RenderOptionChangedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.RENDER_OPTION_CHANGED_EVENT;\n}\nexport class RenderPresentedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.RENDER_PRESENTED_EVENT;\n}\nexport class ResetEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.RESET_EVENT;\n}\nexport class RestoreDefaultSettingsEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.RESTORE_DEFAULT_SETTINGS_EVENT;\n}\nexport class SelectionChangedEventArgs extends ViewerEventArgs {\n  fragIdsArray: number[];\n  dbIdArray: number[];\n  nodeArray: number[];\n  type = Autodesk.Viewing.SELECTION_CHANGED_EVENT;\n}\nexport class ShowEventArgs extends ViewerEventArgs {\n  nodeArrayId: number[];\n  type = Autodesk.Viewing.SHOW_EVENT;\n}\nexport class TexturesLoadedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.TEXTURES_LOADED_EVENT;\n}\nexport class ToolChangedEventArgs extends ViewerEventArgs {\n  toolName: string;\n  tool: Object;\n  active: boolean;\n  type = Autodesk.Viewing.TOOL_CHANGE_EVENT;\n}\nexport class ViewerInitializedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.VIEWER_INITIALIZED;\n}\nexport class ViewerResizeEventArgs extends ViewerEventArgs {\n  width: number;\n  height: number;\n  type = Autodesk.Viewing.VIEWER_RESIZE_EVENT;\n}\nexport class ViewerStateRestoredEventArgs extends ViewerEventArgs {\n  value: boolean;\n  type = Autodesk.Viewing.VIEWER_STATE_RESTORED_EVENT;\n}\nexport class ViewerUnInitializedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.VIEWER_UNINITIALIZED;\n}\n\n/**\n * Base extension that all other extensions can inherit from\n */\nexport abstract class Extension {\n  public static extensionName: string = '';\n\n  protected viewer: Autodesk.Viewing.Viewer3D = undefined;\n  protected extOptions: Autodesk.Viewing.ExtensionOptions = undefined;\n\n  protected eventArgsTypeMap: { [key: string]: Function } = {};\n\n  public static registerExtension(extensionName: string, extension: Object) {\n    Autodesk.Viewing.theExtensionManager.registerExtension(extensionName, extension);\n  }\n\n  public static unregisterExtension(extensionName: string) {\n    Autodesk.Viewing.theExtensionManager.unregisterExtension(extensionName);\n  }\n\n  constructor(viewer: Autodesk.Viewing.Viewer3D,\n              options?: Autodesk.Viewing.ExtensionOptions) {\n    this.viewer = viewer;\n    this.extOptions = options;\n\n    this.registerEventTypes();\n  }\n\n  /** Called by Autodesk extension manager when extension is loaded */\n  public abstract load(): boolean | Promise<boolean>;\n  /** Called by Autodesk extension manager when extension is unloaded */\n  public abstract unload(): boolean;\n  /** Called by Autodesk extension manager when extension is activated - return true */\n  public abstract activate(): boolean;\n  /** Called by Autodesk extension manager when extension is activated - return true */\n  public abstract deactivate(): boolean;\n\n  /** Register event args types that we will cast to 'proper' objects */\n  protected registerEventTypes() {\n    // tslint:disable:max-line-length\n    this.eventArgsTypeMap[Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT] = AggregationSelectionChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.ANIMATION_READY_EVENT] = AnimationReadyEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.CAMERA_CHANGE_EVENT] = CameraChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.CUTPLANES_CHANGE_EVENT] = CutplanesChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.ESCAPE_EVENT] = EscapeEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.EXPLODE_CHANGE_EVENT] = ExplodeChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.EXTENSION_LOADED_EVENT] = ExtensionLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.EXTENSION_UNLOADED_EVENT] = ExtensionUnloadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.FINAL_FRAME_RENDERED_CHANGED_EVENT] = FinalFrameRenderedChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.FIT_TO_VIEW_EVENT] = FitToViewEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.FRAGMENTS_LOADED_EVENT] = FragmentsLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.FULLSCREEN_MODE_EVENT] = FullscreenEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.GEOMETRY_LOADED_EVENT] = GeometryLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.HIDE_EVENT] = HideEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.HYPERLINK_EVENT] = HyperlinkEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.ISOLATE_EVENT] = IsolateEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.LAYER_VISIBILITY_CHANGED_EVENT] = LayerVisibilityEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.LOAD_MISSING_GEOMETRY] = LoadMissingGeometryEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT] = ModelRootLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.MODEL_UNLOADED_EVENT] = ModelUnloadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.NAVIGATION_MODE_CHANGED_EVENT] = NavigationModeChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT] = ObjectTreeCreatedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.OBJECT_TREE_UNAVAILABLE_EVENT] = ObjectTreeUnavailableEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.PREF_CHANGED_EVENT] = PrefChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.PREF_RESET_EVENT] = PrefResetEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.PROGRESS_UPDATE_EVENT] = ProgressUpdateEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.RENDER_OPTION_CHANGED_EVENT] = RenderOptionChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.RENDER_PRESENTED_EVENT] = RenderPresentedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.RESET_EVENT] = ResetEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.RESTORE_DEFAULT_SETTINGS_EVENT] = RestoreDefaultSettingsEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.SELECTION_CHANGED_EVENT] = SelectionChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.SHOW_EVENT] = ShowEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.TEXTURES_LOADED_EVENT] = TexturesLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.TOOL_CHANGE_EVENT] = ToolChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.VIEWER_INITIALIZED] = ViewerInitializedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.VIEWER_RESIZE_EVENT] = ViewerResizeEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.VIEWER_STATE_RESTORED_EVENT] = ViewerStateRestoredEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.VIEWER_UNINITIALIZED] = ViewerUnInitializedEventArgs;\n    // tslint:enable:max-line-length\n  }\n\n  /** Cast Viewer event args to class */\n  protected castArgs(args: any): any {\n    if (Array.isArray(args)) {\n      return args.map(this.castArgs);\n    }\n\n    if (!args || typeof args !== 'object' || !args.hasOwnProperty('type')) {\n      // Can't cast this object\n      return args;\n    }\n\n    // Create new object of appropriate type\n    const clazz = this.eventArgsTypeMap[args.type];\n    const typedItem = Object.create(clazz.prototype);\n\n    // Cast any properties\n    for (const k of Object.keys(args)) {\n      typedItem[k] = this.castArgs(args[k]);\n    }\n\n    return typedItem;\n  }\n}\n","import { Observable, fromEvent, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Extension, ViewerEventArgs } from './extension';\n\nexport class BasicExtension extends Extension {\n  public static extensionName: string = 'BasicExtension';\n  public static debugMessages: boolean = false;\n\n  private static callback: (ext: BasicExtension) => void = null;\n\n  public viewerEvents: Observable<ViewerEventArgs>;\n  protected eventStreams: Observable<ViewerEventArgs>[] = [];\n\n  protected readonly events: string[] = [\n    Autodesk.Viewing.FIT_TO_VIEW_EVENT,\n    Autodesk.Viewing.FULLSCREEN_MODE_EVENT,\n    Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n    Autodesk.Viewing.HIDE_EVENT,\n    Autodesk.Viewing.ISOLATE_EVENT,\n    Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n    Autodesk.Viewing.OBJECT_TREE_UNAVAILABLE_EVENT,\n    Autodesk.Viewing.RESET_EVENT,\n    Autodesk.Viewing.SELECTION_CHANGED_EVENT,\n    Autodesk.Viewing.SHOW_EVENT,\n  ];\n\n  public static registerExtension(extensionName: string, callback: (ext: BasicExtension) => void) {\n    BasicExtension.callback = callback;\n    super.registerExtension(BasicExtension.extensionName, BasicExtension);\n  }\n\n  public load() {\n    this.events.forEach((eventName) => {\n      const obs = fromEvent(this.viewer, eventName).pipe(map(args => this.castArgs(args)));\n      this.eventStreams.push(obs);\n    });\n\n    this.viewerEvents = merge(...this.eventStreams);\n\n    if (BasicExtension.debugMessages) console.log(BasicExtension.extensionName, 'loaded!');\n    if (BasicExtension.callback) BasicExtension.callback(this);\n    return true;\n  }\n\n  public unload() {\n    this.eventStreams = [];\n    this.viewerEvents = undefined;\n\n    if (BasicExtension.debugMessages) console.log(BasicExtension.extensionName, 'unloaded!');\n    return true;\n  }\n\n  public activate() {\n    return true;\n  }\n\n  public deactivate() {\n    return true;\n  }\n}\n","/// <reference types=\"forge-viewer\" />\nimport { takeUntil } from 'rxjs/operators';\n\ndeclare const Autodesk: any;\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy,\n  Output } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\nimport { ScriptService } from '../service/script.service';\nimport {\n  FitToViewEventArgs,\n  FullscreenEventArgs,\n  GeometryLoadedEventArgs,\n  HideEventArgs,\n  IsolateEventArgs,\n  ObjectTreeCreatedEventArgs,\n  ObjectTreeUnavailableEventArgs, ResetEventArgs,\n  SelectionChangedEventArgs,\n  ShowEventArgs,\n  ViewerEventArgs,\n} from '../extensions/extension';\nimport { BasicExtension } from '../extensions/basic-extension';\n\nexport interface DocumentChangedEvent {\n  document: Autodesk.Viewing.Document;\n  viewerComponent: ViewerComponent;\n  viewer: Autodesk.Viewing.Viewer3D;\n}\n\nexport interface ItemLoadedEvent {\n  item: Autodesk.Viewing.ViewerItem;\n  viewer: Autodesk.Viewing.Viewer3D;\n  viewerComponent: ViewerComponent;\n}\n\nexport interface ViewerInitializedEvent {\n  viewerComponent: ViewerComponent;\n  viewer: Autodesk.Viewing.Viewer3D;\n}\n\nexport interface ViewerOptions {\n  initializerOptions: Autodesk.Viewing.InitializerOptions;\n  viewerConfig?: Autodesk.Viewing.ViewerConfig;\n  headlessViewer?: boolean;\n  showFirstViewable?: boolean;\n  enableMemoryManagement?: boolean;\n  onViewerScriptsLoaded?: () => void;\n  onViewerInitialized: (args: ViewerInitializedEvent) => void;\n  version?: string | number;\n}\n\n\n@Component({\n  selector: 'adsk-forge-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewerComponent implements OnDestroy {\n  public containerId: string;\n\n  @Output() public onDocumentChanged = new EventEmitter<DocumentChangedEvent>();\n  @Output() public onItemLoaded = new EventEmitter<ItemLoadedEvent>();\n  @Output() public onError = new EventEmitter<Autodesk.Viewing.ErrorCodes>();\n\n  // Viewer events\n  @Output() public onFitToView = new EventEmitter<FitToViewEventArgs>();\n  @Output() public onFullscreen = new EventEmitter<FullscreenEventArgs>();\n  @Output() public onGeometryLoaded = new EventEmitter<GeometryLoadedEventArgs>();\n  @Output() public onHide = new EventEmitter<HideEventArgs>();\n  @Output() public onIsolate = new EventEmitter<IsolateEventArgs>();\n  @Output() public onObjectTreeCreated = new EventEmitter<ObjectTreeCreatedEventArgs>();\n  @Output() public onObjectTreeUnavailable = new EventEmitter<ObjectTreeUnavailableEventArgs>();\n  @Output() public onReset = new EventEmitter<ResetEventArgs>();\n  @Output() public onSelectionChanged = new EventEmitter<SelectionChangedEventArgs>();\n  @Output() public onShow = new EventEmitter<ShowEventArgs>();\n\n  // Debugging\n  @Input() public showDebugMessages = false;\n\n  private _viewerOptions: ViewerOptions = null;\n  private viewerInitialized = false;\n  private viewer: Autodesk.Viewing.Viewer3D;\n  private documentId: string;\n  private unsubscribe: Subject<boolean> = new Subject();\n  private basicExt: BasicExtension;\n\n  /**\n   * Helper to allow callers to specify documentId with or without the required urn: prefix\n   */\n  private static verifyUrn(documentId: string): string {\n    return (documentId.startsWith('urn:')) ? documentId : `urn:${documentId}`;\n  }\n\n  constructor(private script: ScriptService) {\n    this.containerId = this.getDivName();\n  }\n\n  @Input() public set viewerOptions(options: ViewerOptions) {\n    if (!this.viewerInitialized && options) {\n      this._viewerOptions = options;\n      void this.initialiseViewer();\n    }\n  }\n\n  public get viewerOptions() {\n    return this._viewerOptions;\n  }\n\n  ngOnDestroy() {\n    this.unregisterBasicExtension();\n\n    if (this.viewer) {\n      this.viewer.tearDown();\n      this.viewer.uninitialize();\n    }\n\n    this.viewer = null;\n    this.viewerInitialized = false;\n\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * Helper method to get some default viewer options\n   */\n  public getDefaultViewerOptions(\n    onViewerInitialized: (args: ViewerInitializedEvent) => void,\n    getAccessToken: (onGetAccessToken: (token: string, expire: number) => void) => void,\n  ): ViewerOptions {\n    return {\n      initializerOptions: {\n        env: 'AutodeskProduction',\n        getAccessToken,\n        api: 'derivativeV2',\n      },\n      onViewerInitialized,\n    };\n  }\n\n  /**\n   * Get a reference to the current 3D viewer\n   */\n  public get Viewer3D(): Autodesk.Viewing.Viewer3D {\n    return this.viewer;\n  }\n\n  /**\n   * Get the document urn that has been loaded\n   */\n  public get DocumentId() {\n    return this.documentId;\n  }\n\n  /**\n   * Set the document urn, which triggers the viewer to load the document\n   */\n  public set DocumentId(value: string) {\n    this.documentId = value;\n    this.loadModel(this.documentId);\n  }\n\n  /**\n   * Get the container element\n   */\n  public get Container(): HTMLElement {\n    return document.getElementById(this.containerId);\n  }\n\n  /**\n   * Get the id assigned to the viewer\n   */\n  public get ContainerId() {\n    return this.containerId;\n  }\n\n  public get basicExtension() {\n    return this.basicExt;\n  }\n\n  public get extensionEvents(): Observable<ViewerEventArgs> | null {\n    if (this.basicExt) {\n      return this.basicExt.viewerEvents;\n    }\n  }\n\n  public loadDocumentNode(document: Autodesk.Viewing.Document,\n                          bubbleNode: Autodesk.Viewing.BubbleNode,\n                          options?: object): Promise<Autodesk.Viewing.Model> {\n    return this.viewer.loadDocumentNode(document, bubbleNode, options);\n  }\n\n  /**\n   * We don't bundle Autodesk's scripts with the component, and we don't really want users to have\n   * to add the scripts to their index.html pages. So we'll load them when required.\n   */\n  private loadScripts(): Promise<void> {\n    const version = this.viewerOptions.version || '7.*';\n    const url = `https://developer.api.autodesk.com/modelderivative/v2/viewers/${version}/viewer3D.min.js`;\n    return this.script.load(\n      url,\n    )\n      .then((data) => {\n        this.log('script loaded ', data);\n      })\n      .catch(error => this.error(error));\n  }\n\n  /**\n   * Initialises the viewer\n   */\n  private async initialiseViewer() {\n    // Load scripts first\n    await this.loadScripts();\n    if (this.viewerOptions.onViewerScriptsLoaded) this.viewerOptions.onViewerScriptsLoaded();\n\n    // Check if the viewer has already been initialised - this isn't the nicest, but we've set the env in our\n    // options above so we at least know that it was us who did this!\n    if (!Autodesk.Viewing.Private.env) {\n      Autodesk.Viewing.Initializer(this.viewerOptions.initializerOptions, () => {\n        this.initialized();\n      });\n    } else {\n      // We need to give an initialised viewing application a tick to allow the DOM element\n      // to be established before we re-draw\n      setTimeout(() => {\n        this.initialized();\n      });\n    }\n  }\n\n  private initialized() {\n    // Register an extension to help us raise events\n    const extName = this.registerBasicExtension();\n    const config = this.addBasicExtensionConfig(extName);\n\n    // Support large models\n    if (this.viewerOptions.enableMemoryManagement) {\n      config.loaderExtensions = { svf: 'Autodesk.MemoryLimited' };\n    }\n\n    // Create a new viewer\n    if (this.viewerOptions.headlessViewer) {\n      this.viewer = new Autodesk.Viewing.Viewer3D(this.Container, config);\n    } else {\n      this.viewer = new Autodesk.Viewing.GuiViewer3D(this.Container, config);\n    }\n\n    // set a document url if environment set to Local\n    let url: string;\n    if (this.viewerOptions.initializerOptions?.env === 'Local') {\n      url = this.viewerOptions.initializerOptions?.document;\n    }\n    // Start the viewer\n    this.viewer.start(url);\n\n    // Viewer is ready - scripts are loaded and we've create a new viewing application\n    this.viewerInitialized = true;\n    this.viewerOptions.onViewerInitialized({ viewerComponent: this, viewer: this.viewer });\n  }\n\n  /**\n   * Loads a model in to the viewer via it's urn\n   */\n  private loadModel(documentId: string) {\n    if (!documentId) {\n      return;\n    }\n\n    // Add urn: to the beginning of document id if needed\n    Autodesk.Viewing.Document.load(ViewerComponent.verifyUrn(documentId),\n                                   this.onDocumentLoadSuccess.bind(this),\n                                   this.onDocumentLoadFailure.bind(this));\n  }\n\n  /**\n   * Document successfully loaded\n   */\n  private onDocumentLoadSuccess(document: Autodesk.Viewing.Document) {\n    if (!document.getRoot()) return;\n\n    // Emit an event so the caller can do something\n    // TODO: config option to specify which viewable to display (how?)\n    this.onDocumentChanged.emit({ document, viewerComponent: this, viewer: this.viewer });\n\n    if (this.viewerOptions.showFirstViewable === undefined || this.viewerOptions.showFirstViewable) {\n      let model: Autodesk.Viewing.BubbleNode = (document.getRoot() as any).getDefaultGeometry();\n      if (!model) {\n        const allModels = document.getRoot().search({ type: 'geometry' });\n        model = allModels[0];\n      }\n\n      void this.viewer.loadDocumentNode(document, model, undefined);\n    }\n  }\n\n  /**\n   * Failed to load document\n   */\n  private onDocumentLoadFailure(errorCode: Autodesk.Viewing.ErrorCodes) {\n    this.error('onDocumentLoadFailure() - errorCode:' + errorCode);\n    this.onError.emit(errorCode);\n  }\n\n  /**\n   * Register our BasicExtension with the Forge Viewer\n   */\n  private registerBasicExtension(): string {\n    BasicExtension.registerExtension(BasicExtension.extensionName, this.extensionLoaded.bind(this));\n    return BasicExtension.extensionName;\n  }\n\n  /**\n   * Subscript to BasicExtension events when the extension has been\n   * succesfully loaded by the viewer.\n   */\n  private extensionLoaded(ext: BasicExtension) {\n    this.basicExt = ext;\n    ext.viewerEvents\n      .pipe(takeUntil(this.unsubscribe))\n      .subscribe((item: ViewerEventArgs) => {\n        this.log(item);\n\n        if (item instanceof FitToViewEventArgs) {\n          this.onFitToView.emit(item);\n        } else if (item instanceof FullscreenEventArgs) {\n          this.onFullscreen.emit(item);\n        } else if (item instanceof GeometryLoadedEventArgs) {\n          this.onGeometryLoaded.emit(item);\n        } else if (item instanceof HideEventArgs) {\n          this.onHide.emit(item);\n        } else if (item instanceof IsolateEventArgs) {\n          this.onIsolate.emit(item);\n        } else if (item instanceof ObjectTreeCreatedEventArgs) {\n          this.onObjectTreeCreated.emit(item);\n        } else if (item instanceof ObjectTreeUnavailableEventArgs) {\n          this.onObjectTreeUnavailable.emit(item);\n        } else if (item instanceof ResetEventArgs) {\n          this.onReset.emit(item);\n        } else if (item instanceof SelectionChangedEventArgs) {\n          this.onSelectionChanged.emit(item);\n        } else if (item instanceof ShowEventArgs) {\n          this.onShow.emit(item);\n        }\n      });\n  }\n\n  private unregisterBasicExtension() {\n    BasicExtension.unregisterExtension(BasicExtension.extensionName);\n    this.basicExt = null;\n  }\n\n  /**\n   * Add list of extensions to the viewer config that has been provided\n   * The allows the user to register their own extensions.\n   */\n  private addBasicExtensionConfig(extName: string): Autodesk.Viewing.ViewerConfig {\n    const config: Autodesk.Viewing.ViewerConfig = Object.assign(\n      {},\n      this.viewerOptions.viewerConfig,\n      { extensions: [] },\n    );\n\n    // We will always load our basic extension with any others specified by the caller\n    if (this.viewerOptions.viewerConfig && this.viewerOptions.viewerConfig.extensions) {\n      config.extensions = [...this.viewerOptions.viewerConfig.extensions, extName];\n    } else {\n      config.extensions = [extName];\n    }\n\n    return config;\n  }\n\n  private log(message?: any, ...optionalParams: any[]) {\n    if (!this.showDebugMessages) return;\n    console.log(message, optionalParams);\n  }\n\n  private error(message?: any, ...optionalParams: any[]) {\n    if (!this.showDebugMessages) return;\n    console.error(message, optionalParams);\n  }\n\n  private getDivName() {\n    const S4 = () => {\n      // tslint:disable-next-line:no-bitwise\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n\n    const guid = (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\n    return `viewer_${guid}`;\n  }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\nexport interface ThumbnailOptions {\n  getAccessToken?: (onGetAccessToken: (token: string, expire: number) => void) => void;\n  documentId: string;\n  width?: 100|200|400;\n  height?: 100|200|400;\n  defaultImageSrc?: string;\n}\n\n@Component({\n  selector: 'adsk-forge-thumbnail',\n  templateUrl: './thumbnail.component.html',\n})\nexport class ThumbnailComponent implements OnChanges {\n  @Input() public thumbnailOptions: ThumbnailOptions;\n  public imageSrc: SafeUrl;\n\n  private token: string;\n  private expire: number;   // tslint:disable-line\n\n  constructor(\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,\n  ) { }\n\n  public ngOnChanges() {\n    if (this.thumbnailOptions) {\n      this.setImageSrc(this.thumbnailOptions.defaultImageSrc);\n      this.getThumbnail(this.thumbnailOptions.documentId);\n    }\n  }\n\n  private getThumbnail(documentId: string) {\n    let url = `https://developer.api.autodesk.com/modelderivative/v2/designdata/${documentId}/thumbnail`;\n\n    let opts: string = '';\n    if (this.thumbnailOptions.width) opts += `width=${this.thumbnailOptions.width}&`;\n    if (this.thumbnailOptions.height) opts += `height=${this.thumbnailOptions.height}&`;\n    if (opts) url += `?${opts.slice(0, -1)}`;\n\n    this.thumbnailOptions.getAccessToken(this.setAccessToken.bind(this));\n    const headers = {\n      Authorization: `Bearer ${this.token}`,\n      'Content-Type': 'image/png',\n    };\n\n    this.http.get(url, { headers, responseType: 'arraybuffer' })\n      .subscribe(\n        data => (data) ? this.setImageSrc(`data:image/png;base64,${this.toBase64(data)}`)\n          : this.setImageSrc(),\n        error => this.setImageSrc(),\n      );\n  }\n\n  private setAccessToken(accessToken: string, expiryTime: number) {\n    this.token = accessToken;\n    this.expire = expiryTime;\n  }\n\n  private toBase64(data: ArrayBuffer) {\n    return btoa(String.fromCharCode(...new Uint8Array(data) as any));\n  }\n\n  private setImageSrc(src: string = '') {\n    let imageSrc = '';\n\n    if (src) {\n      imageSrc = src;\n    } else {\n      imageSrc = (this.thumbnailOptions && this.thumbnailOptions.defaultImageSrc) || '';\n    }\n\n    this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(imageSrc);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ViewerComponent } from './component/viewer.component';\nimport { ThumbnailComponent } from './component/thumbnail.component';\nimport { ScriptService } from './service/script.service';\n\n\n@NgModule({\n  declarations: [ViewerComponent, ThumbnailComponent],\n  imports: [HttpClientModule],\n  exports: [ViewerComponent, ThumbnailComponent],\n  providers: [ScriptService],\n})\nexport class ViewerModule { }\n","/*\n * Public API Surface of ng2-adsk-forge-viewer\n */\n\nexport * from './lib/ng2-adsk-forge-viewer.module';\n\nexport * from './lib/extensions/extension';\nexport { BasicExtension } from './lib/extensions/basic-extension';\nexport { ScriptService } from './lib/service/script.service';\n\nexport * from './lib/component/viewer.component';\nexport * from './lib/component/thumbnail.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}